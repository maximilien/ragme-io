# SPDX-License-Identifier: MIT
# Copyright (c) 2025 dr.max

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/ragme"]

[project]
name = "ragme-io"
version = "0.1.0"
description = "A personal RAG system for collecting and querying web content and documents"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.109.0",
    "httpx>=0.24.0",
    "llama-index>=0.10.0",
    "llama-index-readers-web",
    "openai>=1.0.0",
    "PyPDF2>=3.0.0",
    "pydantic>=2.0.0",
    "python-docx>=0.8.11",
    "python-dotenv>=1.0.0",
    "python-magic>=0.4.27",
    "python-multipart>=0.0.5",
    "PyYAML>=6.0",
    "requests>=2.31.0",
    "streamlit",
    "uvicorn>=0.27.0",
    "watchdog>=3.0.0",
    "weaviate-client>=4.0.0",
    "weaviate-client[agents]",
    "pymilvus>=2.4.4",
    # Essential image processing dependencies
    "exif>=1.6.1",
    "pillow>=9.0.0",
    "pillow-heif>=1.1.0",
    "easyocr>=1.7.2",
    "pytesseract>=0.3.13",
    "opencv-python>=4.12.0.88",
    "torch>=2.8.0",
    "torchvision>=0.23.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.3.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.23.0",
    "requests-mock>=1.12.0",
]
ml = [
    # Optional ML dependencies that might be heavy or cause CI issues
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "Pillow>=9.0.0",
]

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B028",  # no explicit stacklevel keyword argument found
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "E402",  # Module level import not at top of file (needed for test setup)
    "F401",  # Imported but unused (some test files need conditional imports)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
addopts = "--disable-warnings"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore::DeprecationWarning:pydantic.*:",
    "ignore::UserWarning:src.ragme.vector_db_milvus:",
    "ignore:Support for class-based `config` is deprecated:DeprecationWarning:pydantic.*:",
]
