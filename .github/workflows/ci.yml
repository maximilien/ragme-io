name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: latest
        
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: |
          .venv
          uv.lock
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-
          
    - name: Install Python dependencies
      run: |
        uv sync --extra dev
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run linting
      env:
        CI: true
      run: |
        chmod +x tools/lint.sh
        ./tools/lint.sh

  test:
    runs-on: ubuntu-latest
    needs: lint
    
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: latest
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          .venv
          uv.lock
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-
          
    - name: Install dependencies
      run: |
        uv sync --extra dev
        
    - name: Run tests
      run: |
        chmod +x test.sh
        ./test.sh
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          .pytest_cache/
        retention-days: 7 